
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B0A32CAD7CE7F605EBF5FCABA8505321'
    
_lr_action_items = {'DO':([56,58,59,60,61,63,66,67,69,82,83,98,115,117,118,119,120,124,126,127,128,129,130,131,132,133,135,139,140,141,],[-65,-68,-72,-71,-67,-64,94,-55,-56,-62,-61,-47,-63,-57,-59,-58,-60,-46,-45,-48,-50,-54,-52,-53,-49,-51,-35,-70,-69,-66,]),'RETURN':([27,38,51,94,113,143,],[32,32,32,32,32,32,]),'THEN':([56,58,59,60,61,63,67,69,77,82,83,98,115,117,118,119,120,124,126,127,128,129,130,131,132,133,135,139,140,141,],[-65,-68,-72,-71,-67,-64,-55,-56,113,-62,-61,-47,-63,-57,-59,-58,-60,-46,-45,-48,-50,-54,-52,-53,-49,-51,-35,-70,-69,-66,]),'READ':([27,38,51,94,113,143,],[33,33,33,33,33,33,]),'EQUAL':([56,58,59,60,61,63,71,82,83,97,115,117,118,119,120,135,139,140,141,],[-65,-68,-72,-71,-67,-64,100,-62,-61,100,-63,-57,-59,-58,-60,-35,-70,-69,-66,]),'FLOATNUM':([32,36,46,53,54,55,68,70,73,74,75,76,80,84,85,86,87,88,89,93,95,99,100,101,102,103,104,136,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'NE':([56,58,59,60,61,63,71,82,83,97,115,117,118,119,120,135,139,140,141,],[-65,-68,-72,-71,-67,-64,102,-62,-61,102,-63,-57,-59,-58,-60,-35,-70,-69,-66,]),'FUN':([0,1,2,5,14,22,28,48,50,],[4,-3,4,-2,4,4,-12,-11,-4,]),'WHILE':([27,38,51,94,113,143,],[36,36,36,36,36,36,]),'PRINT':([27,38,51,94,113,143,],[35,35,35,35,35,35,]),'TRUE':([36,46,68,70,93,95,],[67,67,67,67,67,67,]),'BEGIN':([14,18,21,22,27,28,38,48,51,94,113,143,],[-73,27,-10,-9,38,-12,38,-11,38,38,38,38,]),'LE':([56,58,59,60,61,63,71,82,83,97,115,117,118,119,120,135,139,140,141,],[-65,-68,-72,-71,-67,-64,99,-62,-61,99,-63,-57,-59,-58,-60,-35,-70,-69,-66,]),')':([7,8,9,10,12,16,23,24,25,26,56,58,59,60,61,63,67,69,75,78,81,82,83,90,91,92,96,97,98,107,108,109,110,111,114,115,116,117,118,119,120,124,126,127,128,129,130,131,132,133,135,137,139,140,141,142,],[-73,-5,-8,14,-6,-7,-15,-16,-18,-19,-65,-68,-72,-71,-67,-64,-55,-56,-73,-17,115,-62,-61,122,-43,123,127,115,-47,134,135,-36,-39,-37,139,-63,140,-57,-59,-58,-60,-46,-45,-48,-50,-54,-52,-53,-49,-51,-35,-44,-70,-69,-66,-38,]),'(':([6,32,33,35,36,43,45,46,52,53,54,55,57,63,68,70,73,74,75,76,80,84,85,86,87,88,89,93,95,99,100,101,102,103,104,136,],[7,53,64,65,68,74,75,68,80,53,53,53,84,75,68,68,53,53,53,53,53,53,53,53,53,53,53,68,68,53,53,53,53,53,53,53,]),'+':([32,36,46,53,54,55,56,58,59,60,61,62,63,68,70,71,73,74,75,76,80,81,82,83,84,85,86,87,88,89,93,95,97,99,100,101,102,103,104,106,107,110,112,114,115,116,117,118,119,120,121,128,129,130,131,132,133,135,136,139,140,141,142,],[54,54,54,54,54,54,-65,-68,-72,-71,-67,85,-64,54,54,85,54,54,54,54,54,85,-62,-61,54,54,54,54,54,54,54,54,85,54,54,54,54,54,54,85,85,85,85,85,-63,85,-57,-59,-58,-60,85,85,85,85,85,85,85,-35,54,-70,-69,-66,85,]),'*':([56,58,59,60,61,62,63,71,81,82,83,97,106,107,110,112,114,115,116,117,118,119,120,121,128,129,130,131,132,133,135,139,140,141,142,],[-65,-68,-72,-71,-67,86,-64,86,86,-62,-61,86,86,86,86,86,86,-63,86,86,-59,86,-60,86,86,86,86,86,86,86,-35,-70,-69,-66,86,]),'-':([32,36,46,53,54,55,56,58,59,60,61,62,63,68,70,71,73,74,75,76,80,81,82,83,84,85,86,87,88,89,93,95,97,99,100,101,102,103,104,106,107,110,112,114,115,116,117,118,119,120,121,128,129,130,131,132,133,135,136,139,140,141,142,],[55,55,55,55,55,55,-65,-68,-72,-71,-67,87,-64,55,55,87,55,55,55,55,55,87,-62,-61,55,55,55,55,55,55,55,55,87,55,55,55,55,55,55,87,87,87,87,87,-63,87,-57,-59,-58,-60,87,87,87,87,87,87,87,-35,55,-70,-69,-66,87,]),',':([8,9,16,23,24,25,26,56,58,59,60,61,63,78,82,83,109,110,115,117,118,119,120,135,139,140,141,142,],[13,-8,-7,-15,-16,-18,-19,-65,-68,-72,-71,-67,-64,-17,-62,-61,136,-39,-63,-57,-59,-58,-60,-35,-70,-69,-66,-38,]),'/':([56,58,59,60,61,62,63,71,81,82,83,97,106,107,110,112,114,115,116,117,118,119,120,121,128,129,130,131,132,133,135,139,140,141,142,],[-65,-68,-72,-71,-67,88,-64,88,88,-62,-61,88,88,88,88,88,88,-63,88,88,-59,88,-60,88,88,88,88,88,88,88,-35,-70,-69,-66,88,]),'LT':([56,58,59,60,61,63,71,82,83,97,115,117,118,119,120,135,139,140,141,],[-65,-68,-72,-71,-67,-64,103,-62,-61,103,-63,-57,-59,-58,-60,-35,-70,-69,-66,]),'INTEGER':([30,32,36,46,53,54,55,68,70,73,74,75,76,80,84,85,86,87,88,89,93,95,99,100,101,102,103,104,136,],[49,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),';':([17,19,20,23,24,25,26,29,31,32,34,37,40,41,42,44,47,50,56,58,59,60,61,62,63,72,78,79,82,83,105,106,115,117,118,119,120,122,123,125,134,135,138,139,140,141,144,],[-14,28,-13,-15,-16,-18,-19,48,51,-28,-26,-23,-21,-24,-30,-29,-31,-4,-65,-68,-72,-71,-67,-27,-64,51,-17,-20,-62,-61,-32,-25,-63,-57,-59,-58,-60,-42,-40,-22,-41,-35,-33,-70,-69,-66,-34,]),':':([11,],[15,]),'$end':([1,2,3,5,50,],[-3,-1,0,-2,-4,]),'GT':([56,58,59,60,61,63,71,82,83,97,115,117,118,119,120,135,139,140,141,],[-65,-68,-72,-71,-67,-64,104,-62,-61,104,-63,-57,-59,-58,-60,-35,-70,-69,-66,]),'END':([31,32,34,37,40,41,42,44,47,56,58,59,60,61,62,63,72,79,82,83,105,106,115,117,118,119,120,122,123,125,134,135,138,139,140,141,144,],[50,-28,-26,-23,-21,-24,-30,-29,-31,-65,-68,-72,-71,-67,-27,-64,105,-20,-62,-61,-32,-25,-63,-57,-59,-58,-60,-42,-40,-22,-41,-35,-33,-70,-69,-66,-34,]),'STRING':([65,],[92,]),'SKIP':([27,38,51,94,113,143,],[42,42,42,42,42,42,]),'ELSE':([32,34,37,41,42,44,47,56,58,59,60,61,62,63,82,83,105,106,115,117,118,119,120,122,123,125,134,135,138,139,140,141,144,],[-28,-26,-23,-24,-30,-29,-31,-65,-68,-72,-71,-67,-27,-64,-62,-61,-32,-25,-63,-57,-59,-58,-60,-42,-40,-22,-41,-35,143,-70,-69,-66,-34,]),'WRITE':([27,38,51,94,113,143,],[43,43,43,43,43,43,]),'GE':([56,58,59,60,61,63,71,82,83,97,115,117,118,119,120,135,139,140,141,],[-65,-68,-72,-71,-67,-64,101,-62,-61,101,-63,-57,-59,-58,-60,-35,-70,-69,-66,]),'[':([24,25,26,45,63,91,],[30,-18,-19,76,89,76,]),'ASIGN':([39,45,137,],[73,-43,-44,]),']':([49,56,58,59,60,61,63,82,83,112,115,117,118,119,120,121,135,139,140,141,],[78,-65,-68,-72,-71,-67,-64,-62,-61,137,-63,-57,-59,-58,-60,141,-35,-70,-69,-66,]),'ID':([4,7,13,14,22,27,28,32,36,38,46,48,51,53,54,55,64,68,70,73,74,75,76,80,84,85,86,87,88,89,93,94,95,99,100,101,102,103,104,113,136,143,],[6,11,11,11,11,45,-12,63,63,45,63,-11,45,63,63,63,91,63,63,63,63,63,63,63,63,63,63,63,63,63,63,45,63,63,63,63,63,63,63,45,63,45,]),'IF':([27,38,51,94,113,143,],[46,46,46,46,46,46,]),'AND':([56,58,59,60,61,63,66,67,69,77,82,83,96,98,115,117,118,119,120,124,126,127,128,129,130,131,132,133,135,139,140,141,],[-65,-68,-72,-71,-67,-64,93,-55,-56,93,-62,-61,93,-47,-63,-57,-59,-58,-60,-46,93,-48,-50,-54,-52,-53,-49,-51,-35,-70,-69,-66,]),'FALSE':([36,46,68,70,93,95,],[69,69,69,69,69,69,]),'INT':([15,32,36,46,53,54,55,68,70,73,74,75,76,80,84,85,86,87,88,89,93,95,99,100,101,102,103,104,136,],[25,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FLOAT':([15,32,36,46,53,54,55,68,70,73,74,75,76,80,84,85,86,87,88,89,93,95,99,100,101,102,103,104,136,],[26,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'BREAK':([27,38,51,94,113,143,],[47,47,47,47,47,47,]),'NOT':([36,46,68,70,93,95,],[70,70,70,70,70,70,]),'OR':([56,58,59,60,61,63,66,67,69,77,82,83,96,98,115,117,118,119,120,124,126,127,128,129,130,131,132,133,135,139,140,141,],[-65,-68,-72,-71,-67,-64,95,-55,-56,95,-62,-61,95,-47,-63,-57,-59,-58,-60,-46,-45,-48,-50,-54,-52,-53,-49,-51,-35,-70,-69,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statementBlock':([27,38,],[31,72,]),'paramList':([75,],[109,]),'number':([32,36,46,53,54,55,68,70,73,74,75,76,80,84,85,86,87,88,89,93,95,99,100,101,102,103,104,136,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'inOutExpr':([27,38,51,94,113,143,],[34,34,34,34,34,34,]),'relation':([36,46,68,70,93,95,],[66,77,96,98,124,126,]),'ifthen':([27,38,51,94,113,143,],[37,37,37,37,37,37,]),'arglist':([7,],[10,]),'locals':([14,],[22,]),'type_specifier':([15,],[23,]),'simple_type':([15,],[24,]),'program':([0,],[3,]),'location':([27,38,51,64,94,113,143,],[39,39,39,90,39,39,39,]),'statement':([27,38,51,94,113,143,],[40,40,79,125,138,144,]),'empty':([7,14,75,],[12,21,111,]),'function':([0,2,14,22,],[1,5,17,17,]),'paramslistop':([75,],[108,]),'casting':([32,36,46,53,54,55,68,70,73,74,75,76,80,84,85,86,87,88,89,93,95,99,100,101,102,103,104,136,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'ifthenelse':([27,38,51,94,113,143,],[41,41,41,41,41,41,]),'localslist':([14,],[18,]),'args':([7,],[8,]),'declaration_local':([14,22,],[19,29,]),'functionCall':([27,32,36,38,46,51,53,54,55,68,70,73,74,75,76,80,84,85,86,87,88,89,93,94,95,99,100,101,102,103,104,113,136,143,],[44,58,58,44,58,44,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,44,58,58,58,58,58,58,58,44,58,44,]),'funlist':([0,],[2,]),'var_decl':([7,13,14,22,],[9,16,20,20,]),'expression':([32,36,46,53,54,55,68,70,73,74,75,76,80,84,85,86,87,88,89,93,95,99,100,101,102,103,104,136,],[62,71,71,81,82,83,97,71,106,107,110,112,114,116,117,118,119,120,121,71,71,128,129,130,131,132,133,142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funlist','program',1,'p_program','pasparser.py',21),
  ('funlist -> funlist function','funlist',2,'p_fun_list','pasparser.py',25),
  ('funlist -> function','funlist',1,'p_funList_function','pasparser.py',30),
  ('function -> FUN ID ( arglist ) localslist BEGIN statementBlock END','function',9,'p_function','pasparser.py',34),
  ('arglist -> args','arglist',1,'p_arglist','pasparser.py',38),
  ('arglist -> empty','arglist',1,'p_arglist_empty','pasparser.py',42),
  ('args -> args , var_decl','args',3,'p_args','pasparser.py',46),
  ('args -> var_decl','args',1,'p_args_argument','pasparser.py',51),
  ('localslist -> locals','localslist',1,'p_localList_locals','pasparser.py',55),
  ('localslist -> empty','localslist',1,'p_localList_empty','pasparser.py',59),
  ('locals -> locals declaration_local ;','locals',3,'p_locals','pasparser.py',63),
  ('locals -> declaration_local ;','locals',2,'p_locals_localDecl','pasparser.py',68),
  ('declaration_local -> var_decl','declaration_local',1,'p_localDecl_varDecl','pasparser.py',72),
  ('declaration_local -> function','declaration_local',1,'p_localDecl_fun','pasparser.py',76),
  ('var_decl -> ID : type_specifier','var_decl',3,'p_var_decl','pasparser.py',80),
  ('type_specifier -> simple_type','type_specifier',1,'p_type_specifier1','pasparser.py',84),
  ('type_specifier -> simple_type [ INTEGER ]','type_specifier',4,'p_type_specifier2','pasparser.py',88),
  ('simple_type -> INT','simple_type',1,'p_type_int','pasparser.py',92),
  ('simple_type -> FLOAT','simple_type',1,'p_type_float','pasparser.py',96),
  ('statementBlock -> statementBlock ; statement','statementBlock',3,'p_statementBlock','pasparser.py',100),
  ('statementBlock -> statement','statementBlock',1,'p_statement','pasparser.py',105),
  ('statement -> WHILE relation DO statement','statement',4,'p_statement_while','pasparser.py',110),
  ('statement -> ifthen','statement',1,'p_statement_ifthen','pasparser.py',114),
  ('statement -> ifthenelse','statement',1,'p_statement_ifThenElse','pasparser.py',118),
  ('statement -> location ASIGN expression','statement',3,'p_statement_assign','pasparser.py',122),
  ('statement -> inOutExpr','statement',1,'p_statement_inOutExpr','pasparser.py',126),
  ('statement -> RETURN expression','statement',2,'p_statement_return','pasparser.py',130),
  ('statement -> RETURN','statement',1,'p_statement_return2','pasparser.py',134),
  ('statement -> functionCall','statement',1,'p_statement_call','pasparser.py',138),
  ('statement -> SKIP','statement',1,'p_statement_skip','pasparser.py',142),
  ('statement -> BREAK','statement',1,'p_statement_break','pasparser.py',146),
  ('statement -> BEGIN statementBlock END','statement',3,'p_statement_block','pasparser.py',150),
  ('ifthen -> IF relation THEN statement','ifthen',4,'p_ifthen','pasparser.py',154),
  ('ifthenelse -> IF relation THEN statement ELSE statement','ifthenelse',6,'p_ifthenelse','pasparser.py',158),
  ('functionCall -> ID ( paramslistop )','functionCall',4,'p_functionCall','pasparser.py',162),
  ('paramslistop -> paramList','paramslistop',1,'p_paramsListOp1','pasparser.py',166),
  ('paramslistop -> empty','paramslistop',1,'p_paramsListOp2','pasparser.py',170),
  ('paramList -> paramList , expression','paramList',3,'p_paramList1','pasparser.py',174),
  ('paramList -> expression','paramList',1,'p_paramList2','pasparser.py',179),
  ('inOutExpr -> PRINT ( STRING )','inOutExpr',4,'p_inOutExpr1','pasparser.py',184),
  ('inOutExpr -> WRITE ( expression )','inOutExpr',4,'p_inOutExpr2','pasparser.py',188),
  ('inOutExpr -> READ ( location )','inOutExpr',4,'p_inOutExpr3','pasparser.py',192),
  ('location -> ID','location',1,'p_location1','pasparser.py',196),
  ('location -> ID [ expression ]','location',4,'p_location2','pasparser.py',200),
  ('relation -> relation OR relation','relation',3,'p_relationop1','pasparser.py',204),
  ('relation -> relation AND relation','relation',3,'p_relationop2','pasparser.py',208),
  ('relation -> NOT relation','relation',2,'p_relationop3','pasparser.py',212),
  ('relation -> ( relation )','relation',3,'p_relationop4','pasparser.py',216),
  ('relation -> expression LT expression','relation',3,'p_relation_LT','pasparser.py',220),
  ('relation -> expression LE expression','relation',3,'p_relation_LE','pasparser.py',224),
  ('relation -> expression GT expression','relation',3,'p_relation_GT','pasparser.py',228),
  ('relation -> expression GE expression','relation',3,'p_relation_GE','pasparser.py',232),
  ('relation -> expression NE expression','relation',3,'p_relation_NE','pasparser.py',236),
  ('relation -> expression EQUAL expression','relation',3,'p_relation_equal','pasparser.py',240),
  ('relation -> TRUE','relation',1,'p_relation_true','pasparser.py',244),
  ('relation -> FALSE','relation',1,'p_relation_false','pasparser.py',248),
  ('expression -> expression + expression','expression',3,'p_expr_plus','pasparser.py',252),
  ('expression -> expression - expression','expression',3,'p_expr_minus','pasparser.py',256),
  ('expression -> expression * expression','expression',3,'p_expr_times','pasparser.py',260),
  ('expression -> expression / expression','expression',3,'p_expr_div','pasparser.py',264),
  ('expression -> - expression','expression',2,'p_expr_uminus','pasparser.py',268),
  ('expression -> + expression','expression',2,'p_expr_uplus','pasparser.py',272),
  ('expression -> ( expression )','expression',3,'p_expr_parens','pasparser.py',277),
  ('expression -> ID','expression',1,'p_expr_id','pasparser.py',282),
  ('expression -> number','expression',1,'p_expr_num','pasparser.py',286),
  ('expression -> ID [ expression ]','expression',4,'p_expr_ubication','pasparser.py',290),
  ('expression -> casting','expression',1,'p_expr_casting','pasparser.py',294),
  ('expression -> functionCall','expression',1,'p_expr_funcall','pasparser.py',298),
  ('casting -> INT ( expression )','casting',4,'p_casting_int','pasparser.py',302),
  ('casting -> FLOAT ( expression )','casting',4,'p_casting_float','pasparser.py',306),
  ('number -> INTEGER','number',1,'p_number_int','pasparser.py',310),
  ('number -> FLOATNUM','number',1,'p_number_float','pasparser.py',314),
  ('empty -> <empty>','empty',0,'p_empty','pasparser.py',318),
]
