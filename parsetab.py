
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7E81A2B38A1903B68EB6FDCB69CAF6A'
    
_lr_action_items = {'DO':([58,59,60,61,62,64,67,68,69,71,85,86,100,114,116,117,118,119,123,125,126,127,128,129,130,131,132,134,137,138,139,],[-56,-60,-62,-61,-59,-57,96,-40,-47,-48,-54,-53,-38,-55,-49,-51,-50,-52,-37,-36,-39,-42,-46,-44,-45,-41,-43,-35,-66,-65,-58,]),'RETURN':([27,39,53,96,112,140,],[33,33,33,33,33,33,]),'THEN':([58,59,60,61,62,64,68,69,71,79,85,86,100,114,116,117,118,119,123,125,126,127,128,129,130,131,132,134,137,138,139,],[-56,-60,-62,-61,-59,-57,-40,-47,-48,112,-54,-53,-38,-55,-49,-51,-50,-52,-37,-36,-39,-42,-46,-44,-45,-41,-43,-35,-66,-65,-58,]),'READ':([27,39,53,96,112,140,],[34,34,34,34,34,34,]),'EQUAL':([58,59,60,61,62,64,73,85,86,99,114,116,117,118,119,134,137,138,139,],[-56,-60,-62,-61,-59,-57,102,-54,-53,102,-55,-49,-51,-50,-52,-35,-66,-65,-58,]),'FLOATNUM':([33,37,47,55,56,57,65,70,72,75,76,83,87,88,89,90,91,92,95,97,101,102,103,104,105,106,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'NE':([58,59,60,61,62,64,73,85,86,99,114,116,117,118,119,134,137,138,139,],[-56,-60,-62,-61,-59,-57,104,-54,-53,104,-55,-49,-51,-50,-52,-35,-66,-65,-58,]),'FUN':([0,1,2,5,14,22,28,49,52,],[4,-3,4,-2,4,4,-18,-17,-4,]),'WHILE':([27,39,53,96,112,140,],[37,37,37,37,37,37,]),'PRINT':([27,39,53,96,112,140,],[36,36,36,36,36,36,]),'TRUE':([37,47,70,72,95,97,],[69,69,69,69,69,69,]),'BEGIN':([14,18,21,22,27,28,39,49,53,96,112,140,],[-70,27,-16,-15,39,-18,39,-17,39,39,39,39,]),'LE':([58,59,60,61,62,64,73,85,86,99,114,116,117,118,119,134,137,138,139,],[-56,-60,-62,-61,-59,-57,101,-54,-53,101,-55,-49,-51,-50,-52,-35,-66,-65,-58,]),')':([7,8,9,10,12,16,23,24,25,26,58,59,60,61,62,64,68,69,71,77,80,81,84,85,86,93,94,98,99,100,109,110,113,114,115,116,117,118,119,123,125,126,127,128,129,130,131,132,134,137,138,139,],[-70,-5,-8,14,-6,-7,-9,-13,-14,-10,-56,-60,-62,-61,-59,-57,-40,-47,-48,-70,-12,-11,114,-54,-53,121,122,126,114,-38,133,134,137,-55,138,-49,-51,-50,-52,-37,-36,-39,-42,-46,-44,-45,-41,-43,-35,-66,-65,-58,]),'(':([6,33,34,36,37,44,46,47,54,55,56,57,61,64,65,70,72,75,76,83,87,88,89,90,91,92,95,97,101,102,103,104,105,106,],[7,55,65,66,70,76,77,70,83,55,55,55,87,77,55,70,70,55,55,55,55,55,55,55,55,55,70,70,55,55,55,55,55,55,]),'+':([33,37,47,55,56,57,58,59,60,61,62,63,64,65,70,72,73,75,76,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,104,105,106,108,109,113,114,115,116,117,118,119,120,127,128,129,130,131,132,134,137,138,139,],[56,56,56,56,56,56,-56,-60,-62,-61,-59,88,-57,56,56,56,88,56,56,56,88,-54,-53,56,56,56,56,56,56,88,56,56,88,56,56,56,56,56,56,88,88,88,-55,88,-49,-51,-50,-52,88,88,88,88,88,88,88,-35,-66,-65,-58,]),'*':([58,59,60,61,62,63,64,73,84,85,86,93,99,108,109,113,114,115,116,117,118,119,120,127,128,129,130,131,132,134,137,138,139,],[-56,-60,-62,-61,-59,89,-57,89,89,89,-53,89,89,89,89,89,-55,89,89,-51,89,-52,89,89,89,89,89,89,89,-35,-66,-65,-58,]),'-':([33,37,47,55,56,57,58,59,60,61,62,63,64,65,70,72,73,75,76,83,84,85,86,87,88,89,90,91,92,93,95,97,99,101,102,103,104,105,106,108,109,113,114,115,116,117,118,119,120,127,128,129,130,131,132,134,137,138,139,],[57,57,57,57,57,57,-56,-60,-62,-61,-59,90,-57,57,57,57,90,57,57,57,90,-54,-53,57,57,57,57,57,57,90,57,57,90,57,57,57,57,57,57,90,90,90,-55,90,-49,-51,-50,-52,90,90,90,90,90,90,90,-35,-66,-65,-58,]),',':([8,9,16,23,24,25,26,80,81,],[13,-8,-7,-9,-13,-14,-10,-12,-11,]),'/':([58,59,60,61,62,63,64,73,84,85,86,93,99,108,109,113,114,115,116,117,118,119,120,127,128,129,130,131,132,134,137,138,139,],[-56,-60,-62,-61,-59,91,-57,91,91,91,-53,91,91,91,91,91,-55,91,91,-51,91,-52,91,91,91,91,91,91,91,-35,-66,-65,-58,]),'LT':([58,59,60,61,62,64,73,85,86,99,114,116,117,118,119,134,137,138,139,],[-56,-60,-62,-61,-59,-57,105,-54,-53,105,-55,-49,-51,-50,-52,-35,-66,-65,-58,]),'INTEGER':([30,31,33,37,47,55,56,57,65,70,72,75,76,78,83,87,88,89,90,91,92,95,97,101,102,103,104,105,106,],[50,51,61,61,61,61,61,61,61,61,61,61,61,111,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),';':([17,19,20,23,24,25,26,29,32,35,38,41,42,43,45,48,52,58,59,60,61,62,63,64,74,80,81,82,85,86,107,108,114,116,117,118,119,121,122,124,133,134,136,137,138,139,141,],[-20,28,-19,-9,-13,-14,-10,49,53,-27,-24,-22,-25,-30,-29,-31,-4,-56,-60,-62,-61,-59,-28,-57,53,-12,-11,-21,-54,-53,-32,-26,-55,-49,-51,-50,-52,-69,-67,-23,-68,-35,-33,-66,-65,-58,-34,]),':':([11,],[15,]),'$end':([1,2,3,5,52,],[-3,-1,0,-2,-4,]),'GT':([58,59,60,61,62,64,73,85,86,99,114,116,117,118,119,134,137,138,139,],[-56,-60,-62,-61,-59,-57,106,-54,-53,106,-55,-49,-51,-50,-52,-35,-66,-65,-58,]),'END':([32,35,38,41,42,43,45,48,58,59,60,61,62,63,64,74,82,85,86,107,108,114,116,117,118,119,121,122,124,133,134,136,137,138,139,141,],[52,-27,-24,-22,-25,-30,-29,-31,-56,-60,-62,-61,-59,-28,-57,107,-21,-54,-53,-32,-26,-55,-49,-51,-50,-52,-69,-67,-23,-68,-35,-33,-66,-65,-58,-34,]),'STRING':([66,],[94,]),'SKIP':([27,39,53,96,112,140,],[43,43,43,43,43,43,]),'ELSE':([35,38,42,43,45,48,58,59,60,61,62,63,64,85,86,107,108,114,116,117,118,119,121,122,124,133,134,136,137,138,139,141,],[-27,-24,-25,-30,-29,-31,-56,-60,-62,-61,-59,-28,-57,-54,-53,-32,-26,-55,-49,-51,-50,-52,-69,-67,-23,-68,-35,140,-66,-65,-58,-34,]),'WRITE':([27,39,53,96,112,140,],[44,44,44,44,44,44,]),'GE':([58,59,60,61,62,64,73,85,86,99,114,116,117,118,119,134,137,138,139,],[-56,-60,-62,-61,-59,-57,103,-54,-53,103,-55,-49,-51,-50,-52,-35,-66,-65,-58,]),'[':([24,25,46,64,],[30,31,78,92,]),'ASIGN':([40,46,135,],[75,-63,-64,]),']':([50,51,58,59,60,61,62,64,85,86,111,114,116,117,118,119,120,134,137,138,139,],[80,81,-56,-60,-62,-61,-59,-57,-54,-53,135,-55,-49,-51,-50,-52,139,-35,-66,-65,-58,]),'ID':([4,7,13,14,22,27,28,33,37,39,47,49,53,55,56,57,65,70,72,75,76,77,83,87,88,89,90,91,92,95,96,97,101,102,103,104,105,106,112,140,],[6,11,11,11,11,46,-18,64,64,46,64,-17,46,64,64,64,64,64,64,64,64,11,64,64,64,64,64,64,64,64,46,64,64,64,64,64,64,64,46,46,]),'IF':([27,39,53,96,112,140,],[47,47,47,47,47,47,]),'AND':([58,59,60,61,62,64,67,68,69,71,79,85,86,98,100,114,116,117,118,119,123,125,126,127,128,129,130,131,132,134,137,138,139,],[-56,-60,-62,-61,-59,-57,95,-40,-47,-48,95,-54,-53,95,-38,-55,-49,-51,-50,-52,-37,95,-39,-42,-46,-44,-45,-41,-43,-35,-66,-65,-58,]),'FALSE':([37,47,70,72,95,97,],[71,71,71,71,71,71,]),'INT':([15,],[24,]),'FLOAT':([15,33,37,47,55,56,57,65,70,72,75,76,83,87,88,89,90,91,92,95,97,101,102,103,104,105,106,],[25,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'BREAK':([27,39,53,96,112,140,],[48,48,48,48,48,48,]),'NOT':([37,47,70,72,95,97,],[72,72,72,72,72,72,]),'OR':([58,59,60,61,62,64,67,68,69,71,79,85,86,98,100,114,116,117,118,119,123,125,126,127,128,129,130,131,132,134,137,138,139,],[-56,-60,-62,-61,-59,-57,97,-40,-47,-48,97,-54,-53,97,-38,-55,-49,-51,-50,-52,-37,-36,-39,-42,-46,-44,-45,-41,-43,-35,-66,-65,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statementBlock':([27,39,],[32,74,]),'relationop':([37,47,70,72,95,97,],[67,79,98,100,123,125,]),'number':([33,37,47,55,56,57,65,70,72,75,76,83,87,88,89,90,91,92,95,97,101,102,103,104,105,106,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'inOutExpr':([27,39,53,96,112,140,],[35,35,35,35,35,35,]),'relation':([37,47,70,72,95,97,],[68,68,68,68,68,68,]),'ifthen':([27,39,53,96,112,140,],[38,38,38,38,38,38,]),'arglist':([7,77,],[10,110,]),'locals':([14,],[22,]),'type_specifier':([15,],[23,]),'program':([0,],[3,]),'location':([27,39,53,96,112,140,],[40,40,40,40,40,40,]),'statement':([27,39,53,96,112,140,],[41,41,82,124,136,141,]),'type':([15,],[26,]),'empty':([7,14,77,],[12,21,12,]),'function':([0,2,14,22,],[1,5,17,17,]),'casting':([33,37,47,55,56,57,65,70,72,75,76,83,87,88,89,90,91,92,95,97,101,102,103,104,105,106,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'ifthenelse':([27,39,53,96,112,140,],[42,42,42,42,42,42,]),'localslist':([14,],[18,]),'args':([7,77,],[8,8,]),'declaration_local':([14,22,],[19,29,]),'functionCall':([27,33,37,39,47,53,55,56,57,65,70,72,75,76,83,87,88,89,90,91,92,95,96,97,101,102,103,104,105,106,112,140,],[45,59,59,45,59,45,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,45,59,59,59,59,59,59,59,45,45,]),'funlist':([0,],[2,]),'var_decl':([7,13,14,22,77,],[9,16,20,20,9,]),'expression':([33,37,47,55,56,57,65,70,72,75,76,83,87,88,89,90,91,92,95,97,101,102,103,104,105,106,],[63,73,73,84,85,86,93,99,73,108,109,113,115,116,117,118,119,120,73,73,127,128,129,130,131,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funlist','program',1,'p_program','pasparser.py',16),
  ('funlist -> funlist function','funlist',2,'p_fun_list','pasparser.py',20),
  ('funlist -> function','funlist',1,'p_funList_function','pasparser.py',24),
  ('function -> FUN ID ( arglist ) localslist BEGIN statementBlock END','function',9,'p_function','pasparser.py',28),
  ('arglist -> args','arglist',1,'p_arglist','pasparser.py',32),
  ('arglist -> empty','arglist',1,'p_arglist_empty','pasparser.py',36),
  ('args -> args , var_decl','args',3,'p_args','pasparser.py',40),
  ('args -> var_decl','args',1,'p_args_argument','pasparser.py',44),
  ('var_decl -> ID : type_specifier','var_decl',3,'p_var_decl','pasparser.py',48),
  ('type_specifier -> type','type_specifier',1,'p_type_specifier1','pasparser.py',52),
  ('type_specifier -> FLOAT [ INTEGER ]','type_specifier',4,'p_type_specifier2','pasparser.py',56),
  ('type_specifier -> INT [ INTEGER ]','type_specifier',4,'p_type_specifier3','pasparser.py',60),
  ('type -> INT','type',1,'p_type_int','pasparser.py',64),
  ('type -> FLOAT','type',1,'p_type_float','pasparser.py',68),
  ('localslist -> locals','localslist',1,'p_localList_locals','pasparser.py',72),
  ('localslist -> empty','localslist',1,'p_localList_empty','pasparser.py',76),
  ('locals -> locals declaration_local ;','locals',3,'p_locals','pasparser.py',80),
  ('locals -> declaration_local ;','locals',2,'p_locals_localDecl','pasparser.py',84),
  ('declaration_local -> var_decl','declaration_local',1,'p_localDecl_varDecl','pasparser.py',88),
  ('declaration_local -> function','declaration_local',1,'p_localDecl_fun','pasparser.py',92),
  ('statementBlock -> statementBlock ; statement','statementBlock',3,'p_statementBlock','pasparser.py',96),
  ('statementBlock -> statement','statementBlock',1,'p_statement','pasparser.py',100),
  ('statement -> WHILE relationop DO statement','statement',4,'p_statement_while','pasparser.py',104),
  ('statement -> ifthen','statement',1,'p_statement_ifthen','pasparser.py',108),
  ('statement -> ifthenelse','statement',1,'p_statement_ifThenElse','pasparser.py',112),
  ('statement -> location ASIGN expression','statement',3,'p_statement_assign','pasparser.py',116),
  ('statement -> inOutExpr','statement',1,'p_statement_inOutExpr','pasparser.py',120),
  ('statement -> RETURN expression','statement',2,'p_statement_return','pasparser.py',124),
  ('statement -> functionCall','statement',1,'p_statement_call','pasparser.py',128),
  ('statement -> SKIP','statement',1,'p_statement_skip','pasparser.py',132),
  ('statement -> BREAK','statement',1,'p_statement_break','pasparser.py',136),
  ('statement -> BEGIN statementBlock END','statement',3,'p_statement_block','pasparser.py',140),
  ('ifthen -> IF relationop THEN statement','ifthen',4,'p_ifthen','pasparser.py',144),
  ('ifthenelse -> IF relationop THEN statement ELSE statement','ifthenelse',6,'p_ifthenelse','pasparser.py',148),
  ('functionCall -> ID ( arglist )','functionCall',4,'p_functionCall','pasparser.py',152),
  ('relationop -> relationop OR relationop','relationop',3,'p_relationop1','pasparser.py',156),
  ('relationop -> relationop AND relationop','relationop',3,'p_relationop2','pasparser.py',160),
  ('relationop -> NOT relationop','relationop',2,'p_relationop3','pasparser.py',164),
  ('relationop -> ( relationop )','relationop',3,'p_relationop4','pasparser.py',168),
  ('relationop -> relation','relationop',1,'p_relationop5','pasparser.py',172),
  ('relation -> expression LT expression','relation',3,'p_relation_LT','pasparser.py',176),
  ('relation -> expression LE expression','relation',3,'p_relation_LE','pasparser.py',180),
  ('relation -> expression GT expression','relation',3,'p_relation_GT','pasparser.py',184),
  ('relation -> expression GE expression','relation',3,'p_relation_GE','pasparser.py',188),
  ('relation -> expression NE expression','relation',3,'p_relation_NE','pasparser.py',192),
  ('relation -> expression EQUAL expression','relation',3,'p_relation_equal','pasparser.py',196),
  ('relation -> TRUE','relation',1,'p_relation_true','pasparser.py',200),
  ('relation -> FALSE','relation',1,'p_relation_false','pasparser.py',204),
  ('expression -> expression + expression','expression',3,'p_expr_plus','pasparser.py',208),
  ('expression -> expression - expression','expression',3,'p_expr_minus','pasparser.py',212),
  ('expression -> expression * expression','expression',3,'p_expr_times','pasparser.py',216),
  ('expression -> expression / expression','expression',3,'p_expr_div','pasparser.py',220),
  ('expression -> - expression','expression',2,'p_expr_uminus','pasparser.py',224),
  ('expression -> + expression','expression',2,'p_expr_uplus','pasparser.py',228),
  ('expression -> ( expression )','expression',3,'p_expr_parens','pasparser.py',232),
  ('expression -> number','expression',1,'p_expr_num','pasparser.py',240),
  ('expression -> ID','expression',1,'p_expr_id','pasparser.py',244),
  ('expression -> ID [ expression ]','expression',4,'p_expr_ubication','pasparser.py',248),
  ('expression -> casting','expression',1,'p_expr_casting','pasparser.py',251),
  ('expression -> functionCall','expression',1,'p_expr_funcall','pasparser.py',255),
  ('number -> INTEGER','number',1,'p_num_int','pasparser.py',259),
  ('number -> FLOATNUM','number',1,'p_num_float','pasparser.py',263),
  ('location -> ID','location',1,'p_location1','pasparser.py',266),
  ('location -> ID [ INTEGER ]','location',4,'p_location2','pasparser.py',270),
  ('casting -> INTEGER ( expression )','casting',4,'p_casting_int','pasparser.py',274),
  ('casting -> FLOAT ( expression )','casting',4,'p_casting_float','pasparser.py',278),
  ('inOutExpr -> PRINT ( STRING )','inOutExpr',4,'p_inOutExpr1','pasparser.py',282),
  ('inOutExpr -> WRITE ( expression )','inOutExpr',4,'p_inOutExpr2','pasparser.py',286),
  ('inOutExpr -> READ ( expression )','inOutExpr',4,'p_inOutExpr3','pasparser.py',290),
  ('empty -> <empty>','empty',0,'p_empty','pasparser.py',294),
]
