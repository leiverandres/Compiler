
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1B0C10E5A7E8F44171B1AE7107467BF5'
    
_lr_action_items = {'DO':([70,72,73,74,75,77,80,81,83,97,98,113,133,135,136,137,138,142,144,145,146,147,148,149,150,151,153,159,160,161,],[-78,-81,-85,-84,-80,-77,109,-68,-69,-75,-74,-60,-76,-70,-72,-71,-73,-59,-58,-61,-63,-67,-65,-66,-62,-64,-48,-83,-82,-79,]),'RETURN':([36,42,43,45,48,49,51,52,53,55,58,62,63,64,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,163,164,165,],[43,43,-39,-37,-34,43,-31,-35,-41,-40,-42,43,-32,43,-78,-81,-85,-84,-80,-38,-77,-68,-69,43,-44,43,43,-30,-75,-74,43,-60,-43,-36,43,43,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,43,-83,-82,-79,43,-47,-46,]),'THEN':([70,72,73,74,75,77,81,83,92,97,98,113,133,135,136,137,138,142,144,145,146,147,148,149,150,151,153,159,160,161,],[-78,-81,-85,-84,-80,-77,-68,-69,128,-75,-74,-60,-76,-70,-72,-71,-73,-59,-58,-61,-63,-67,-65,-66,-62,-64,-48,-83,-82,-79,]),'READ':([36,42,43,45,48,49,51,52,53,55,58,62,63,64,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,163,164,165,],[44,44,-39,-37,-34,44,-31,-35,-41,-40,-42,44,-32,44,-78,-81,-85,-84,-80,-38,-77,-68,-69,44,-44,44,44,-30,-75,-74,44,-60,-43,-36,44,44,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,44,-83,-82,-79,44,-47,-46,]),'EQUAL':([70,72,73,74,75,77,85,97,98,112,133,135,136,137,138,153,159,160,161,],[-78,-81,-85,-84,-80,-77,115,-75,-74,115,-76,-70,-72,-71,-73,-48,-83,-82,-79,]),'FLOATNUM':([43,47,57,67,68,69,82,84,88,89,90,91,95,99,100,101,102,103,104,108,110,114,115,116,117,118,119,154,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'NE':([70,72,73,74,75,77,85,97,98,112,133,135,136,137,138,153,159,160,161,],[-78,-81,-85,-84,-80,-77,117,-75,-74,117,-76,-70,-72,-71,-73,-48,-83,-82,-79,]),'FUN':([0,1,2,6,17,18,19,20,21,26,28,30,32,33,34,35,37,38,39,59,60,61,65,131,158,],[4,-4,4,-3,4,-24,-26,-28,-29,-22,-20,4,-25,-23,4,-18,-17,-21,-19,-16,-15,-27,-6,-5,-7,]),'WHILE':([36,42,43,45,48,49,51,52,53,55,58,62,63,64,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,163,164,165,],[47,47,-39,-37,-34,47,-31,-35,-41,-40,-42,47,-32,47,-78,-81,-85,-84,-80,-38,-77,-68,-69,47,-44,47,47,-30,-75,-74,47,-60,-43,-36,47,47,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,47,-83,-82,-79,47,-47,-46,]),'PRINT':([36,42,43,45,48,49,51,52,53,55,58,62,63,64,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,163,164,165,],[46,46,-39,-37,-34,46,-31,-35,-41,-40,-42,46,-32,46,-78,-81,-85,-84,-80,-38,-77,-68,-69,46,-44,46,46,-30,-75,-74,46,-60,-43,-36,46,46,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,46,-83,-82,-79,46,-47,-46,]),'TRUE':([47,57,82,84,108,110,],[81,81,81,81,81,81,]),'BEGIN':([17,18,19,20,21,26,27,28,29,30,32,33,34,35,36,37,38,39,41,42,43,45,48,49,51,52,53,55,58,59,60,61,62,63,64,65,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,131,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,158,159,160,161,163,164,165,],[-86,-24,-26,-28,-29,-22,36,-20,-14,-13,-25,-23,-86,-18,49,-17,-21,-19,62,49,-39,-37,-34,49,-31,-35,-41,-40,-42,-16,-15,-27,49,-32,49,-6,-78,-81,-85,-84,-80,-38,-77,-68,-69,49,-44,49,49,-30,-75,-74,49,-60,-43,-36,49,49,-5,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,49,-7,-83,-82,-79,49,-47,-46,]),'LE':([70,72,73,74,75,77,85,97,98,112,133,135,136,137,138,153,159,160,161,],[-78,-81,-85,-84,-80,-77,114,-75,-74,114,-76,-70,-72,-71,-73,-48,-83,-82,-79,]),')':([7,9,10,11,13,14,16,18,19,20,21,24,25,32,33,61,70,72,73,74,75,77,81,83,90,96,97,98,105,106,107,111,112,113,122,123,124,125,126,132,133,134,135,136,137,138,142,144,145,146,147,148,149,150,151,153,155,159,160,161,162,],[-86,-8,-10,17,-9,-86,-12,-24,-26,-28,-29,34,-11,-25,-23,-27,-78,-81,-85,-84,-80,-77,-68,-69,-86,133,-75,-74,140,-56,141,145,133,-60,152,153,-49,-52,-50,159,-76,160,-70,-72,-71,-73,-59,-58,-61,-63,-67,-65,-66,-62,-64,-48,-57,-83,-82,-79,-51,]),'(':([4,8,43,44,46,47,54,56,57,66,67,68,69,71,77,82,84,88,89,90,91,95,99,100,101,102,103,104,108,110,114,115,116,117,118,119,154,],[7,14,67,78,79,82,89,90,82,95,67,67,67,99,90,82,82,67,67,67,67,67,67,67,67,67,67,67,82,82,67,67,67,67,67,67,67,]),'+':([43,47,57,67,68,69,70,72,73,74,75,76,77,82,84,85,88,89,90,91,95,96,97,98,99,100,101,102,103,104,108,110,112,114,115,116,117,118,119,121,122,125,127,132,133,134,135,136,137,138,139,146,147,148,149,150,151,153,154,159,160,161,162,],[68,68,68,68,68,68,-78,-81,-85,-84,-80,100,-77,68,68,100,68,68,68,68,68,100,-75,-74,68,68,68,68,68,68,68,68,100,68,68,68,68,68,68,100,100,100,100,100,-76,100,-70,-72,-71,-73,100,100,100,100,100,100,100,-48,68,-83,-82,-79,100,]),'*':([70,72,73,74,75,76,77,85,96,97,98,112,121,122,125,127,132,133,134,135,136,137,138,139,146,147,148,149,150,151,153,159,160,161,162,],[-78,-81,-85,-84,-80,101,-77,101,101,-75,-74,101,101,101,101,101,101,-76,101,101,-72,101,-73,101,101,101,101,101,101,101,-48,-83,-82,-79,101,]),'-':([43,47,57,67,68,69,70,72,73,74,75,76,77,82,84,85,88,89,90,91,95,96,97,98,99,100,101,102,103,104,108,110,112,114,115,116,117,118,119,121,122,125,127,132,133,134,135,136,137,138,139,146,147,148,149,150,151,153,154,159,160,161,162,],[69,69,69,69,69,69,-78,-81,-85,-84,-80,102,-77,69,69,102,69,69,69,69,69,102,-75,-74,69,69,69,69,69,69,69,69,102,69,69,69,69,69,69,102,102,102,102,102,-76,102,-70,-72,-71,-73,102,102,102,102,102,102,102,-48,69,-83,-82,-79,102,]),',':([9,10,16,18,19,20,21,25,32,33,61,70,72,73,74,75,77,97,98,124,125,133,135,136,137,138,153,159,160,161,162,],[15,-10,-12,-24,-26,-28,-29,-11,-25,-23,-27,-78,-81,-85,-84,-80,-77,-75,-74,154,-52,-76,-70,-72,-71,-73,-48,-83,-82,-79,-51,]),'/':([70,72,73,74,75,76,77,85,96,97,98,112,121,122,125,127,132,133,134,135,136,137,138,139,146,147,148,149,150,151,153,159,160,161,162,],[-78,-81,-85,-84,-80,103,-77,103,103,-75,-74,103,103,103,103,103,103,-76,103,103,-72,103,-73,103,103,103,103,103,103,103,-48,-83,-82,-79,103,]),'LT':([70,72,73,74,75,77,85,97,98,112,133,135,136,137,138,153,159,160,161,],[-78,-81,-85,-84,-80,-77,118,-75,-74,118,-76,-70,-72,-71,-73,-48,-83,-82,-79,]),'INTEGER':([31,43,47,57,67,68,69,82,84,88,89,90,91,95,99,100,101,102,103,104,108,110,114,115,116,117,118,119,154,],[40,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),';':([18,19,20,21,26,28,32,33,38,39,42,43,45,48,51,52,53,55,58,61,63,65,70,72,73,74,75,76,77,86,87,93,94,97,98,120,121,131,133,135,136,137,138,140,141,143,152,153,156,158,159,160,161,164,165,],[-24,-26,-28,-29,35,37,-25,-23,59,60,64,-39,-37,-34,-31,-35,-41,-40,-42,-27,-32,-6,-78,-81,-85,-84,-80,-38,-77,64,-44,130,-30,-75,-74,-43,-36,-5,-76,-70,-72,-71,-73,-55,-53,-33,-54,-48,-45,-7,-83,-82,-79,-47,-46,]),':':([12,],[23,]),'$end':([0,1,2,3,5,6,65,131,158,],[-86,-4,-1,0,-2,-3,-6,-5,-7,]),'GT':([70,72,73,74,75,77,85,97,98,112,133,135,136,137,138,153,159,160,161,],[-78,-81,-85,-84,-80,-77,119,-75,-74,119,-76,-70,-72,-71,-73,-48,-83,-82,-79,]),'END':([42,43,45,48,49,51,52,53,55,58,63,70,72,73,74,75,76,77,86,87,93,94,97,98,120,121,130,133,135,136,137,138,140,141,143,152,153,156,159,160,161,164,165,],[65,-39,-37,-34,87,-31,-35,-41,-40,-42,-32,-78,-81,-85,-84,-80,-38,-77,120,-44,131,-30,-75,-74,-43,-36,158,-76,-70,-72,-71,-73,-55,-53,-33,-54,-48,-45,-83,-82,-79,-47,-46,]),'STRING':([79,],[107,]),'SKIP':([36,42,43,45,48,49,51,52,53,55,58,62,63,64,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,163,164,165,],[53,53,-39,-37,-34,53,-31,-35,-41,-40,-42,53,-32,53,-78,-81,-85,-84,-80,-38,-77,-68,-69,53,-44,53,53,-30,-75,-74,53,-60,-43,-36,53,53,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,53,-83,-82,-79,53,-47,-46,]),'ASIGN':([12,50,56,155,],[22,88,-56,-57,]),'WRITE':([36,42,43,45,48,49,51,52,53,55,58,62,63,64,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,163,164,165,],[54,54,-39,-37,-34,54,-31,-35,-41,-40,-42,54,-32,54,-78,-81,-85,-84,-80,-38,-77,-68,-69,54,-44,54,54,-30,-75,-74,54,-60,-43,-36,54,54,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,54,-83,-82,-79,54,-47,-46,]),'GE':([70,72,73,74,75,77,85,97,98,112,133,135,136,137,138,153,159,160,161,],[-78,-81,-85,-84,-80,-77,116,-75,-74,116,-76,-70,-72,-71,-73,-48,-83,-82,-79,]),'[':([19,20,21,56,77,106,],[31,-28,-29,91,104,91,]),'ELSE':([43,45,48,52,53,55,58,70,72,73,74,75,76,77,87,97,98,120,121,129,133,135,136,137,138,140,141,143,152,153,156,159,160,161,164,165,],[-39,-37,-34,-35,-41,-40,-42,-78,-81,-85,-84,-80,-38,-77,-44,-75,-74,-43,-36,157,-76,-70,-72,-71,-73,-55,-53,-33,-54,-48,163,-83,-82,-79,-47,-46,]),']':([40,70,72,73,74,75,77,97,98,127,133,135,136,137,138,139,153,159,160,161,],[61,-78,-81,-85,-84,-80,-77,-75,-74,155,-76,-70,-72,-71,-73,161,-48,-83,-82,-79,]),'ID':([4,7,9,10,14,15,16,17,18,19,20,21,25,26,28,30,32,33,34,35,36,37,38,39,42,43,45,47,48,49,51,52,53,55,57,58,59,60,61,62,63,64,65,67,68,69,70,72,73,74,75,76,77,78,81,82,83,84,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,108,109,110,113,114,115,116,117,118,119,120,121,128,130,131,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,163,164,165,],[8,12,12,-10,12,12,-12,12,-24,-26,-28,-29,-11,-22,-20,12,-25,-23,12,-18,56,-17,-21,-19,56,77,-37,77,-34,56,-31,-35,-41,-40,77,-42,-16,-15,-27,56,-32,56,-6,77,77,77,-78,-81,-85,-84,-80,-38,-77,106,-68,77,-69,77,56,-44,77,77,77,77,56,56,-30,77,-75,-74,77,77,77,77,77,77,77,56,77,-60,77,77,77,77,77,77,-43,-36,56,56,-5,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,77,-45,56,-7,-83,-82,-79,56,-47,-46,]),'IF':([36,42,43,45,48,49,51,52,53,55,58,62,63,64,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,163,164,165,],[57,57,-39,-37,-34,57,-31,-35,-41,-40,-42,57,-32,57,-78,-81,-85,-84,-80,-38,-77,-68,-69,57,-44,57,57,-30,-75,-74,57,-60,-43,-36,57,57,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,57,-83,-82,-79,57,-47,-46,]),'AND':([70,72,73,74,75,77,80,81,83,92,97,98,111,113,133,135,136,137,138,142,144,145,146,147,148,149,150,151,153,159,160,161,],[-78,-81,-85,-84,-80,-77,108,-68,-69,108,-75,-74,108,-60,-76,-70,-72,-71,-73,-59,108,-61,-63,-67,-65,-66,-62,-64,-48,-83,-82,-79,]),'FALSE':([47,57,82,84,108,110,],[83,83,83,83,83,83,]),'INT':([12,22,23,43,47,57,67,68,69,82,84,88,89,90,91,95,99,100,101,102,103,104,108,110,114,115,116,117,118,119,154,],[20,20,20,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'FLOAT':([12,22,23,43,47,57,67,68,69,82,84,88,89,90,91,95,99,100,101,102,103,104,108,110,114,115,116,117,118,119,154,],[21,21,21,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'BREAK':([36,42,43,45,48,49,51,52,53,55,58,62,63,64,70,72,73,74,75,76,77,81,83,86,87,92,93,94,97,98,109,113,120,121,128,130,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,159,160,161,163,164,165,],[58,58,-39,-37,-34,58,-31,-35,-41,-40,-42,58,-32,58,-78,-81,-85,-84,-80,-38,-77,-68,-69,58,-44,58,58,-30,-75,-74,58,-60,-43,-36,58,58,-76,-70,-72,-71,-73,-55,-53,-59,-33,-58,-61,-63,-67,-65,-66,-62,-64,-54,-48,-45,58,-83,-82,-79,58,-47,-46,]),'NOT':([47,57,82,84,108,110,],[84,84,84,84,84,84,]),'OR':([70,72,73,74,75,77,80,81,83,92,97,98,111,113,133,135,136,137,138,142,144,145,146,147,148,149,150,151,153,159,160,161,],[-78,-81,-85,-84,-80,-77,110,-68,-69,110,-75,-74,110,-60,-76,-70,-72,-71,-73,-59,-58,-61,-63,-67,-65,-66,-62,-64,-48,-83,-82,-79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statementBlock':([36,49,62,],[42,86,93,]),'paramList':([90,],[124,]),'number':([43,47,57,67,68,69,82,84,88,89,90,91,95,99,100,101,102,103,104,108,110,114,115,116,117,118,119,154,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'inOutExpr':([36,42,49,62,64,86,92,93,109,128,130,157,163,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'relation':([47,57,82,84,108,110,],[80,92,111,113,142,144,]),'ifthen':([36,42,49,62,64,86,92,93,109,128,130,157,163,],[48,48,48,48,48,48,48,48,48,48,48,48,48,]),'arglist':([7,14,],[11,24,]),'locals':([17,34,],[30,30,]),'type_specifier':([12,22,23,],[18,32,33,]),'simple_type':([12,22,23,],[19,19,19,]),'program':([0,],[3,]),'location':([36,42,49,62,64,78,86,92,93,109,128,130,157,163,],[50,50,50,50,50,105,50,50,50,50,50,50,50,50,]),'statement':([36,42,49,62,64,86,92,93,109,128,130,157,163,],[51,63,51,51,94,63,129,63,143,156,94,164,165,]),'empty':([0,7,14,17,34,90,],[5,13,13,29,29,126,]),'function':([0,2,17,30,34,],[1,6,26,38,26,]),'paramslistop':([90,],[123,]),'casting':([43,47,57,67,68,69,82,84,88,89,90,91,95,99,100,101,102,103,104,108,110,114,115,116,117,118,119,154,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'ifthenelse':([36,42,49,62,64,86,92,93,109,128,130,157,163,],[52,52,52,52,52,52,52,52,52,52,52,52,52,]),'localslist':([17,34,],[27,41,]),'args':([7,14,],[9,9,]),'functionCall':([36,42,43,47,49,57,62,64,67,68,69,82,84,86,88,89,90,91,92,93,95,99,100,101,102,103,104,108,109,110,114,115,116,117,118,119,128,130,154,157,163,],[55,55,72,72,55,72,55,55,72,72,72,72,72,55,72,72,72,72,55,55,72,72,72,72,72,72,72,72,55,72,72,72,72,72,72,72,55,55,72,55,55,]),'funlist':([0,],[2,]),'var_decl':([7,9,14,15,17,30,34,],[10,16,10,25,28,39,28,]),'expression':([43,47,57,67,68,69,82,84,88,89,90,91,95,99,100,101,102,103,104,108,110,114,115,116,117,118,119,154,],[76,85,85,96,97,98,112,85,121,122,125,127,132,134,135,136,137,138,139,85,85,146,147,148,149,150,151,162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funlist','program',1,'p_program','pasparser.py',26),
  ('program -> empty','program',1,'p_error_program','pasparser.py',30),
  ('funlist -> funlist function','funlist',2,'p_fun_list','pasparser.py',36),
  ('funlist -> function','funlist',1,'p_funList_function','pasparser.py',42),
  ('function -> FUN ID ( arglist ) localslist BEGIN statementBlock END','function',9,'p_function','pasparser.py',47),
  ('function -> FUN ( arglist ) localslist BEGIN statementBlock END','function',8,'p_error_function','pasparser.py',52),
  ('function -> FUN ID ( arglist ) localslist BEGIN statementBlock ; END','function',10,'p_error_function2','pasparser.py',60),
  ('arglist -> args','arglist',1,'p_arglist','pasparser.py',66),
  ('arglist -> empty','arglist',1,'p_arglist_empty','pasparser.py',70),
  ('args -> var_decl','args',1,'p_args_argument','pasparser.py',75),
  ('args -> args , var_decl','args',3,'p_args','pasparser.py',80),
  ('args -> args var_decl','args',2,'p_error_args','pasparser.py',85),
  ('localslist -> locals','localslist',1,'p_localList_locals','pasparser.py',91),
  ('localslist -> empty','localslist',1,'p_localList_empty','pasparser.py',95),
  ('locals -> locals var_decl ;','locals',3,'p_locals_var','pasparser.py',99),
  ('locals -> locals function ;','locals',3,'p_locals_fun','pasparser.py',104),
  ('locals -> var_decl ;','locals',2,'p_locals_localDecl','pasparser.py',109),
  ('locals -> function ;','locals',2,'p_locals_localFun','pasparser.py',114),
  ('locals -> locals var_decl','locals',2,'p_error_locals1','pasparser.py',119),
  ('locals -> var_decl','locals',1,'p_error_locals2','pasparser.py',125),
  ('locals -> locals function','locals',2,'p_error_locals3','pasparser.py',131),
  ('locals -> function','locals',1,'p_error_locals4','pasparser.py',137),
  ('var_decl -> ID : type_specifier','var_decl',3,'p_var_decl','pasparser.py',143),
  ('var_decl -> ID type_specifier','var_decl',2,'p_error_var_decl','pasparser.py',149),
  ('var_decl -> ID ASIGN type_specifier','var_decl',3,'p_error_var_decl','pasparser.py',150),
  ('type_specifier -> simple_type','type_specifier',1,'p_type_specifier1','pasparser.py',157),
  ('type_specifier -> simple_type [ INTEGER ]','type_specifier',4,'p_type_specifier2','pasparser.py',161),
  ('simple_type -> INT','simple_type',1,'p_type_int','pasparser.py',166),
  ('simple_type -> FLOAT','simple_type',1,'p_type_float','pasparser.py',171),
  ('statementBlock -> statementBlock ; statement','statementBlock',3,'p_statementBlock','pasparser.py',176),
  ('statementBlock -> statement','statementBlock',1,'p_statement','pasparser.py',182),
  ('statementBlock -> statementBlock statement','statementBlock',2,'p_error_comma_stm','pasparser.py',187),
  ('statement -> WHILE relation DO statement','statement',4,'p_statement_while','pasparser.py',193),
  ('statement -> ifthen','statement',1,'p_statement_ifthen','pasparser.py',198),
  ('statement -> ifthenelse','statement',1,'p_statement_ifThenElse','pasparser.py',203),
  ('statement -> location ASIGN expression','statement',3,'p_statement_assign','pasparser.py',208),
  ('statement -> inOutExpr','statement',1,'p_statement_inOutExpr','pasparser.py',213),
  ('statement -> RETURN expression','statement',2,'p_statement_return','pasparser.py',217),
  ('statement -> RETURN','statement',1,'p_statement_return2','pasparser.py',222),
  ('statement -> functionCall','statement',1,'p_statement_call','pasparser.py',227),
  ('statement -> SKIP','statement',1,'p_statement_skip','pasparser.py',231),
  ('statement -> BREAK','statement',1,'p_statement_break','pasparser.py',236),
  ('statement -> BEGIN statementBlock END','statement',3,'p_statement_block','pasparser.py',241),
  ('statement -> BEGIN END','statement',2,'p_error_block','pasparser.py',245),
  ('ifthen -> IF relation THEN statement','ifthen',4,'p_ifthen','pasparser.py',251),
  ('ifthenelse -> IF relation THEN statement ELSE statement','ifthenelse',6,'p_ifthenelse','pasparser.py',256),
  ('ifthenelse -> IF relation statement ELSE statement','ifthenelse',5,'p_error_ifthen','pasparser.py',267),
  ('functionCall -> ID ( paramslistop )','functionCall',4,'p_functionCall','pasparser.py',273),
  ('paramslistop -> paramList','paramslistop',1,'p_paramsListOp1','pasparser.py',278),
  ('paramslistop -> empty','paramslistop',1,'p_paramsListOp2','pasparser.py',282),
  ('paramList -> paramList , expression','paramList',3,'p_paramList1','pasparser.py',286),
  ('paramList -> expression','paramList',1,'p_paramList2','pasparser.py',291),
  ('inOutExpr -> PRINT ( STRING )','inOutExpr',4,'p_inOutExpr1','pasparser.py',296),
  ('inOutExpr -> WRITE ( expression )','inOutExpr',4,'p_inOutExpr2','pasparser.py',301),
  ('inOutExpr -> READ ( location )','inOutExpr',4,'p_inOutExpr3','pasparser.py',306),
  ('location -> ID','location',1,'p_location1','pasparser.py',311),
  ('location -> ID [ expression ]','location',4,'p_location2','pasparser.py',316),
  ('relation -> relation OR relation','relation',3,'p_relationop1','pasparser.py',321),
  ('relation -> relation AND relation','relation',3,'p_relationop2','pasparser.py',326),
  ('relation -> NOT relation','relation',2,'p_relationop3','pasparser.py',331),
  ('relation -> ( relation )','relation',3,'p_relationop4','pasparser.py',336),
  ('relation -> expression LT expression','relation',3,'p_relation_LT','pasparser.py',340),
  ('relation -> expression LE expression','relation',3,'p_relation_LE','pasparser.py',345),
  ('relation -> expression GT expression','relation',3,'p_relation_GT','pasparser.py',350),
  ('relation -> expression GE expression','relation',3,'p_relation_GE','pasparser.py',355),
  ('relation -> expression NE expression','relation',3,'p_relation_NE','pasparser.py',360),
  ('relation -> expression EQUAL expression','relation',3,'p_relation_equal','pasparser.py',365),
  ('relation -> TRUE','relation',1,'p_relation_true','pasparser.py',370),
  ('relation -> FALSE','relation',1,'p_relation_false','pasparser.py',375),
  ('expression -> expression + expression','expression',3,'p_expr_plus','pasparser.py',380),
  ('expression -> expression - expression','expression',3,'p_expr_minus','pasparser.py',385),
  ('expression -> expression * expression','expression',3,'p_expr_times','pasparser.py',390),
  ('expression -> expression / expression','expression',3,'p_expr_div','pasparser.py',395),
  ('expression -> - expression','expression',2,'p_expr_uminus','pasparser.py',400),
  ('expression -> + expression','expression',2,'p_expr_uplus','pasparser.py',405),
  ('expression -> ( expression )','expression',3,'p_expr_parens','pasparser.py',409),
  ('expression -> ID','expression',1,'p_expr_id','pasparser.py',413),
  ('expression -> number','expression',1,'p_expr_num','pasparser.py',418),
  ('expression -> ID [ expression ]','expression',4,'p_expr_ubication','pasparser.py',422),
  ('expression -> casting','expression',1,'p_expr_casting','pasparser.py',427),
  ('expression -> functionCall','expression',1,'p_expr_funcall','pasparser.py',431),
  ('casting -> INT ( expression )','casting',4,'p_casting_int','pasparser.py',435),
  ('casting -> FLOAT ( expression )','casting',4,'p_casting_float','pasparser.py',440),
  ('number -> INTEGER','number',1,'p_number_int','pasparser.py',445),
  ('number -> FLOATNUM','number',1,'p_number_float','pasparser.py',451),
  ('empty -> <empty>','empty',0,'p_empty','pasparser.py',457),
]
